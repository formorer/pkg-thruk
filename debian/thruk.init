#!/bin/sh

### BEGIN INIT INFO
# Provides:             thruk
# Required-Start:       $local_fs $remote_fs
# Required-Stop:        $local_fs $remote_fs
# Should-Start:         apache2
# Should-Stop:
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Start/Stop the Thruk FCGI Daemon
# Description:          This script calls the thruk daemon via apache to make
#                       sure the fcgi script is started.
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="thruk fcgi daemon"
NAME=thruk
PIDFILE=/var/cache/thruk/thruk.pid
STARTURL="http://localhost/thruk/cgi-bin/remote.cgi"
WGET="/usr/bin/wget"

# Exit if the package is not installed
[ -x "/usr/bin/thruk" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

# make it possible to override startcmd by /etc/default/thruk
if [ -z "$STARTCMD" ]; then
  STARTCMD="$WGET --no-proxy --no-check-certificate --post-data='' -q -O /dev/null $STARTURL"
fi

case "$1" in
    start)
        log_daemon_msg "Starting $DESC" "$NAME"
        $STARTCMD > /dev/null 2>&1 &
        for x in $(seq 1 15); do
            test -f $PIDFILE && break;
            sleep 1
        done
        test -f $PIDFILE
        case "$?" in
            0|1) log_end_msg 0 ;;
            2) log_end_msg 1 ;;
        esac
    ;;
    stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE 
        case "$?" in
            0|1) log_end_msg 0 ;;
            2) log_end_msg 1 ;;
        esac
    ;;
    status)
	if [ -e $PIDFILE ]
	then
		PID=$(cat $PIDFILE)
		if [ -n "$PID" ]
		then
			ps aux |awk "\$2 == $PID { print }" |grep -q 'thruk_fastcgi\.pl'
			case "$?" in
				0) log_success_msg "$NAME is running" ; exit 0 ;;
				*) log_failure_msg "$NAME is not running" ; exit $? ;;
			esac
		else
			log_failure_msg "$NAME is not running"
			exit 1;
		fi
	else
		log_failure_msg "$NAME is not running"
	fi
    ;;
    reload|force-reload|restart)
        $0 stop && $0 start
        exit $?
        ;;
    *)
        echo "Usage: $NAME {start|stop|status|reload|restart|force-reload}"
        exit 1
        ;;
esac

exit 0
